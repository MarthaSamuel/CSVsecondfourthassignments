#BlueJ class context
comment0.target=WeatherParser
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment1.text=\r\n\ This\ method\ returns\ the\ CSVRecord\ with\ the\ coldest\ temperature\ in\ the\ file\r\n\ and\ thus\ all\ the\ information\ about\ that\ coldest\ temperature,\ such\ as\ the\ hour\ of\ the\r\n\ coldest\ temperature\r\n\ @param\ parser\r\n\ @return\r\n
comment10.params=toprint
comment10.target=void\ printme(java.lang.String)
comment11.params=
comment11.target=void\ testColdestHourInFile()
comment11.text=\r\n\ test\ this\ method\ and\ print\ out\ information\ about\ that\r\n\ coldest\ temperature\ such\ as\ the\ time\ of\ its\ occurrence.\r\n\ \r\n\ NOTE\:\ Sometimes\ there\ was\ not\ a\ valid\ reading\ at\ a\ specific\ hour,\ so\ the\ temperature\r\n\ field\ says\ \u00AD9999.\ You\ should\ ignore\ these\ bogus\ temperature\ values\ when\ calculating\r\n\ the\ lowest\ temperature\r\n
comment2.params=
comment2.target=java.lang.String\ fileWithColdestTemperature()
comment2.text=\r\n\ Write\ the\ method\ fileWithColdestTemperaturethat\ has\ no\ parameters.\ This\r\nmethod\ should\ return\ a\ String\ that\ is\ the\ name\ of\ the\ file\ from\ selected\ files\ that\ has\ the\r\ncoldest\ temperature.\r\n
comment3.params=parser
comment3.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment3.text=\r\n\ Write\ a\ method\ named\ lowestHumidityInFile\ that\ has\ one\ parameter,\ a\ CSVParser\ named\ parser.\ This\ method\ returns\ the\ CSVRecord\ that\ has\ the\ lowest\ humidity.\ \r\n\ If\ there\ is\ a\ tie,\ then\ return\ the\ first\ such\ record\ that\ was\ found.\r\nNote\ that\ sometimes\ there\ is\ not\ a\ number\ in\ the\ Humidity\ column\ but\ instead\ there\ is\ the\ string\ \u201CN/A\u201D.\ This\ only\ happens\ very\ rarely.\r\n\ You\ should\ check\ to\ make\ sure\ the\ value\ you\ get\ is\ not\ \u201CN/A\u201D\ before\ converting\ it\ to\ a\ number.\r\nAlso\ note\ that\ the\ header\ for\ the\ time\ is\ either\ TimeEST\ or\ TimeEDT,\ depending\ on\ the\ time\ of\ year.\ \r\nYou\ will\ instead\ use\ the\ DateUTC\ field\ at\ the\ right\ end\ of\ the\ data\ file\ to\ get\ both\ the\ date\ and\ time\ of\ a\ temperature\ reading.\r\n
comment4.params=parser
comment4.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment4.text=\r\n\ \ Write\ the\ method\ averageTemperatureInFile\ that\ has\ one\ parameter,\ a\ CSVParser\ named\ parser.\ T\r\n\ \ his\ method\ returns\ a\ double\ that\ represents\ the\ average\ temperature\ in\ the\ file.\ \r\n\ \ You\ should\ also\ write\ a\ void\ method\ named\ testAverageTemperatureInFile()\ to\ test\ this\ method.\ \r\n\ \ When\ this\ method\ runs\ and\ selects\ the\ file\ for\ January\ 20,\ 2014,\ the\ method\ should\ print\ out\r\n\ \r\n
comment5.params=parser\ value
comment5.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment5.text=\r\n\ Write\ the\ method\ averageTemperatureWithHighHumidityInFile\ that\ has\ two\ parameters,\ a\ CSVParser\ named\ parser\ and\ an\ integer\ named\ value.\ T\r\n\ his\ method\ returns\ a\ double\ that\ represents\ the\ average\ temperature\ of\ only\ those\ temperatures\ when\ the\ humidity\ was\ greater\ than\ or\ equal\ to\ value.\ \r\n\ You\ should\ also\ write\ a\ void\ method\ named\ testAverageTemperatureWithHighHumidityInFile()\ to\ test\ this\ method.\ \r\n\ When\ this\ method\ runs\ checking\ for\ humidity\ greater\ than\ or\ equal\ to\ 80\ and\ selects\ the\ file\ for\ January\ 20,\ 2014,\ the\ method\ should\ print\ out\r\n
comment6.params=
comment6.target=void\ testaverageTemperatureWithHighHumidityInFile()
comment6.text=\r\n\ You\ should\ also\ write\ a\ void\ method\ named\ testLowestHumidityInFile()\ to\ test\ this\ method\ that\ starts\ with\ these\ lines\:\r\nand\ then\ prints\ the\ lowest\ humidity\ AND\ the\ time\ the\ lowest\ humidity\ occurred.\ For\ example,\ for\ the\ file\ weather-2014-01-20.csv,\ the\ output\ should\ be\:\r\n
comment7.params=
comment7.target=void\ testaverageTemperatureInFile()
comment8.params=
comment8.target=void\ testLowestHumidityInFile()
comment9.params=
comment9.target=void\ testFileWithColdestTemperature()
comment9.text=\r\n\ You\ should\ also\ write\ a\ void\ method\ named\r\ntestFileWithColdestTemperature()to\ test\ this\ method.\ Note\ that\ after\r\ndetermining\ the\ filename,\ you\ could\ call\ the\ method\ coldestHourInFileto\r\ndetermine\ the\ coldest\ temperature\ on\ that\ day.\r\n
numComments=12
